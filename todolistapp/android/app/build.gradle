plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localProperties.load(localPropertiesFile.newDataInputStream())
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode", "1")
def flutterVersionName = localProperties.getProperty("flutter.versionName", "1.0")

android {
    namespace = "com.example.todolistapp"
    compileSdkVersion 34
    buildToolsVersion "34.0.0"

    defaultConfig {
        applicationId "com.example.todolistapp"
        minSdkVersion 23
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    ndkVersion "21.3.6528147"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source "../.."
}

dependencies {
     implementation "org.jetbrains.kotlin:kotlin-stdlib:1.7.10"

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:33.1.2')

    // Add the dependencies for Firebase products you want to use
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
}

// Apply the Google services plugin at the end of the file
apply plugin: 'com.google.gms.google-services'

// Ensure the Google Services task is completed before processing source sets
afterEvaluate {
    tasks.named("mapDebugSourceSetPaths").configure {
        dependsOn("processDebugGoogleServices")
    }
}